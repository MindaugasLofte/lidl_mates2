# Generated by Django 4.1.3 on 2022-12-05 01:52

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('date_of_birth', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('picker_code', models.CharField(help_text='rinkejo_kodas', max_length=3, unique=True, verbose_name='Piker code')),
                ('first_name', models.CharField(help_text='Vardas', max_length=80, verbose_name='First name')),
                ('last_name', models.CharField(help_text='Pavardė', max_length=80, verbose_name='Last name')),
                ('working_department', models.CharField(blank=True, choices=[('Vilniaus apsk', 'Vilniaus apsk'), ('Vilniaus regioninis sandėlys', 'Vilniaus regioninis sandėlys'), ('Kauno apsk', 'Kauno apsk'), ('Kauno regioninis sandėlys', 'Kauno regioninis sandėlys'), ('Klaipėdos apsk', 'Klaipėdos apsk')], default='Kauno regioninis sandėlys', help_text='Kurioje (-iame) apskrityje/logistikos sandėlyje dirbate', max_length=80, verbose_name='Working disctric or logistic warehouse')),
                ('position', models.CharField(blank=True, choices=[('grupes vadovas', 'grupes vadovas'), ('grupes vadovo asistentas', 'grupes vadovo asistentas'), ('grupes vadovo asistentas', 'grupes vadovo asistentas'), ('prekiu komplektuotojas', 'prekiu komplektuotojas')], default='prekiu komplektuotojas', help_text='Darbuotojo pareigos', max_length=80, verbose_name='Working position')),
                ('photo', models.ImageField(blank=True, help_text='Darbuotojo foto arba avataras', null=True, upload_to='photos')),
                ('working_since', models.DateField(blank=True, help_text='Darbo pradžia LIDL imoneje', null=True, verbose_name='Working since')),
            ],
            options={
                'verbose_name': 'Worker',
                'verbose_name_plural': 'Workers',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Darbo_zona_sandelyje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone_code', models.CharField(blank=True, choices=[('20', '20 - HR'), ('40', '40 - MOPRO'), ('41', '41 - Pienas'), ('60', '60 - TIKO'), ('61', '61 - BakeOff'), ('70', '70 - Fruits'), ('50', '50 - Mėsa'), ('90', '90 - NonFood')], default='40', help_text='Darbo zona sandėlyje', max_length=80, unique=True, verbose_name='Working zone code')),
                ('zone_description', models.CharField(help_text='Zonos aprasymas pvz 60-Tiko', max_length=80, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Working zone',
                'verbose_name_plural': 'Working zones',
                'ordering': ['zone_code'],
            },
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(blank=True, help_text='kada zinute sukurta', null=True, verbose_name='Date')),
                ('note_type', models.CharField(blank=True, choices=[('9', 'paprasta zinute sau'), ('0', 'reikia informuoti tiesiogini vadova'), ('8', 'metu ideja')], default='9', help_text='Zinutes tipas', max_length=40, null=True, verbose_name='Type of notes')),
                ('summary', models.TextField(blank=True, help_text='Svarbu aprasyti placiau, aciu uz jusu laika.', max_length=1000, null=True, verbose_name='Description of the notes')),
                ('darbuotojas', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['data', 'note_type'],
            },
        ),
        migrations.CreateModel(
            name='Krautuvas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('krautuvo_id', models.IntegerField(help_text='krautuvo numeris', unique=True, verbose_name='Vechiles ID "3 digits"')),
                ('data_taken', models.DateField(blank=True, help_text='kada krautuvas paiimtas', null=True, verbose_name='Date when vechiles was taken')),
                ('note_type', models.CharField(blank=True, choices=[('aukstas', 'aukstas'), ('vidutinis', 'vidutinis'), ('zemas', 'zemas'), ('be pastebejimu', 'be pastebejimu')], default='be pastebejimu', help_text='Rasto gedimo/pastabos svarba', max_length=40, null=True, verbose_name='Importance of the notes')),
                ('notes', models.TextField(blank=True, help_text='labai svarbu pamineti ir smulkiausius gedimus, dekojame.', max_length=1000, null=True)),
                ('status', models.CharField(blank=True, choices=[('ready', 'ready'), ('taken', 'taken'), ('waiting_for_repair', 'waiting_for_repair'), ('repairing', 'repairing')], default='taken', help_text='Status', max_length=30, null=True, verbose_name='Status')),
                ('darbuotojas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'ordering': ['krautuvo_id'],
            },
        ),
        migrations.CreateModel(
            name='Darbo_laiko_irasai',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(blank=True, help_text='kada dirbta', null=True, verbose_name='Date of working record')),
                ('status', models.CharField(blank=True, choices=[('darbas', 'darbas'), ('pertrauka', 'pertrauka'), ('pietu pertrauka', 'pietu pertrauka')], default='darbas', help_text='Darbo grafiko laiko tipas', max_length=40, verbose_name='Type of working record')),
                ('duration', models.CharField(blank=True, default=datetime.timedelta(seconds=25200), help_text='darbo iraso trukme', max_length=20, null=True, verbose_name='Duration')),
                ('picked_boxes', models.IntegerField(blank=True, default='0', help_text='Surinkta deziu per irasa', null=True, verbose_name='Picked boxes per duration')),
                ('darbuotojas', models.ForeignKey(max_length=100, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('working_zone', models.ForeignKey(max_length=80, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lm.darbo_zona_sandelyje')),
            ],
            options={
                'verbose_name': 'Working record',
                'verbose_name_plural': 'Working records',
                'ordering': ['data'],
            },
        ),
        migrations.AddField(
            model_name='myuser',
            name='working_zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='lm.darbo_zona_sandelyje'),
        ),
    ]
